stages:
  - build
  - integration
  - test
  - review
  - deploy

build-lib:
  image: node:10-alpine
  stage: build
  script:
    - npm ci
    - npm run build:lib
  artifacts:
    expire_in: 1 week
    paths:
      - dist/@w11k/angular-sticky-things

build-demo-master:
  image: node:10-alpine
  stage: integration
  script:
    - npm ci
    - npm run build -- --base-href "/angular-sticky-things/"
  artifacts:
    expire_in: 1 week
    paths:
      - dist/angular-sticky-things-demo
  only:
    refs:
      - master


build-demo-review:
  image: node:10-alpine
  stage: integration
  script:
    - npm ci
    - npm run build  -- --base-href /angular-sticky-things/review/$CI_COMMIT_REF_NAME/index.html
  artifacts:
    expire_in: 1 week
    paths:
      - dist/angular-sticky-things-demo
  except:
    - master


test-lib:
  image: trion/ng-cli-karma
  stage: test
  script:
    - npm ci
    - npm run test:lib

#test-demo:
#  image: trion/ng-cli-karma
#  stage: test
#  script:
#  - npm run test

test-demo:
  image: trion/ng-cli-karma
  stage: test
  script:
    - npm ci
    - npm run e2e



publish-review:
  image: node:10
  stage: review
  script:
    - git config --global user.email "deploy@w11k.de"
    - git config --global user.name "W11K Deploy"
    - npx gh-pages -e review/$CI_COMMIT_REF_NAME -d dist/angular-sticky-things-demo --repo https://$GITHUB_TOKEN@github.com/w11k/angular-sticky-things --silent
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://w11k.github.io/angular-sticky-things/review/$CI_COMMIT_REF_NAME
  only:
    - branches
  except:
    - master

publish-master:
  image: node:10
  stage: review
  script:
    - git config --global user.email "deploy@w11k.de"
    - git config --global user.name "W11K Deploy"
    - npx gh-pages -d dist/angular-sticky-things-demo --remote https://$GITHUB_TOKEN@github.com/w11k/angular-sticky-things --silent --add
  environment:
    name: production
    url: https://w11k.github.io/angular-sticky-things/
  only:
    - master


publish-dev:
  image: node:10-alpine
  stage: deploy
  only:
    - tags
  before_script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_COMMIT_SHA)
    - export PACKAGE_VERSION=$(sed -nE 's/^\s*"version": "(.*?)",$/\1/p' package.json)
    - export DEV_VERSION="$PACKAGE_VERSION-dev-$COMMIT_TIME"
  script:
    - npm version DEV_VERSION
    - cd dist/@w11k/angular-sticky-things
    - cp ../../../README.md .
    - cp ../../../LICENSE .
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'>.npmrc
    - npm publish --access=public --tag next


publish:
  image: node:10-alpine
  stage: deploy
  only:
    - tags
  script:
    - cd dist/@w11k/angular-sticky-things
    - cp ../../../README.md .
    - cp ../../../LICENSE .
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'>.npmrc
    - npm publish --access=public


